generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./swiss_jass.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  
  // User avatar/icon (simple shapes for now)
  avatarShape String @default("circle") // circle, square, triangle, diamond, star, heart
  avatarColor String @default("#3B82F6") // hex color
  
  // Location
  country   String @default("CH")
  city      String?
  
  // Game stats
  totalGames    Int @default(0)
  totalWins     Int @default(0)
  totalPoints   Int @default(0)
  eloRating     Int @default(1200)
  currentStreak Int @default(0)
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime?
  
  // Relations
  hostedGames     Game[] @relation("GameHost")
  participations  GameParticipation[]
  moves          GameMove[]
  
  @@map("users")
}

model Game {
  id          String   @id @default(cuid())
  gameType    String   // "schieber", "handjass", etc.
  pointsToWin Int      @default(157)
  status      String   // "waiting", "playing", "finished"
  hostUserId  String
  gameState   String?  // JSON string of game state
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  host           User @relation("GameHost", fields: [hostUserId], references: [id])
  participations GameParticipation[]
  moves         GameMove[]
  
  @@map("games")
}

model GameParticipation {
  id       String @id @default(cuid())
  gameId   String
  userId   String
  joinedAt DateTime @default(now())
  position Int?    // Player position in game
  
  // Relations
  game Game @relation(fields: [gameId], references: [id])
  user User @relation(fields: [userId], references: [id])
  
  @@unique([gameId, userId])
  @@map("game_participations")
}

model GameMove {
  id        String   @id @default(cuid())
  gameId    String
  userId    String
  moveData  String   // JSON string of move data
  createdAt DateTime @default(now())
  
  // Relations
  game Game @relation(fields: [gameId], references: [id])
  user User @relation(fields: [userId], references: [id])
  
  @@map("game_moves")
}

model GameSession {
  id        String   @id @default(cuid())
  userId    String
  gameType  String   // "schieber", "handjass", etc.
  result    String   // "won", "lost", "draw"
  points    Int
  duration  Int      // in minutes
  createdAt DateTime @default(now())
  
  @@map("game_sessions")
}