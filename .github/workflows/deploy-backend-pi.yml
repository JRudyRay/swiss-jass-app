name: Deploy backend to Raspberry Pi

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend-pi.yml'
      - 'deploy/raspberry-pi/**'
      - 'docker-compose.yml'
      - 'Dockerfile'
  workflow_dispatch:  # This allows manual triggering
  workflow_call:
    secrets:
      PI_HOST:
        required: true
      PI_SSH_USER:
        required: true
      PI_SSH_KEY:
        required: true
      PI_SSH_PORT:
        required: false
    inputs:
      PI_APP_DIR:
        required: true
        type: string
      PI_BRANCH:
        required: false
        type: string

jobs:
  deploy:
    name: Deploy to Raspberry Pi
    runs-on: self-hosted
    steps:
      - name: Clean workspace
        run: |
          # Fix permissions on files created by Docker before checkout
          sudo chown -R $(whoami):$(whoami) . || true
          sudo chmod -R u+w . || true
          
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy with Docker
        run: |
          set -euo pipefail
          
          # Ensure Docker is running and accessible
          sudo systemctl start docker || true
          
          # Set up environment variables for production
          export NODE_ENV=production
          
          # Create data directory for database persistence
          mkdir -p data
          
          # Fix database file permissions before Docker starts
          echo "Setting up database permissions..."
          if [ -f backend/prisma/swiss_jass.db ]; then
            chmod 666 backend/prisma/swiss_jass.db
          fi
          chmod 777 backend/prisma
          
          # Stop existing containers gracefully
          docker compose down --timeout 30 || true
          
          # Fix database permissions after stopping containers
          echo "Fixing database file permissions..."
          if [ -f backend/prisma/swiss_jass.db ]; then
            sudo chmod 666 backend/prisma/swiss_jass.db
            sudo chown $(whoami):$(whoami) backend/prisma/swiss_jass.db
          fi
          sudo chmod 777 backend/prisma
          sudo chown $(whoami):$(whoami) backend/prisma
          
          # Build and start the containers
          echo "Building and starting Docker containers..."
          docker compose up -d --build
          
          # Wait for container to be ready
          echo "Waiting for container to be ready..."
          sleep 15
          
          # Run database migrations
          echo "Running database migrations..."
          docker compose exec -T swiss-jass-backend npx prisma migrate deploy || echo "Migration failed or no migrations to run"
          
          # Debug container issues
          echo "Checking container logs..."
          docker compose logs --tail=50 swiss-jass-backend
          
          # Show container details
          echo "Container inspect:"
          docker inspect swiss-jass-backend || true
          
          # Clean up old Docker images to save space
          echo "Cleaning up old Docker images..."
          docker image prune -f --filter "until=24h" 2>/dev/null || true
          
          # Show container status
          echo "Deployment completed. Container status:"
          docker compose ps
          
          # Verify health endpoint
          echo "Checking health endpoint..."
          sleep 5
          curl -f http://localhost:3000/health || echo "Health check failed, but container may still be starting"
