name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install web dependencies
        run: |
          cd web
          npm ci

      - name: Run smoke (build bundles + tests + simulate)
        run: |
          cd web
          npm run smoke

      - name: Run production build
        run: |
          cd web
          npm run build

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v4

      - name: Debug configure-pages step object
        run: |
          echo "SETUP_PAGES_STEP=${{ toJson(steps.setup_pages) }}"
          echo "UPLOAD_URL_OUT='${{ steps.setup_pages.outputs.upload_url }}'"

      - name: Upload artifact for GitHub Pages (zip + curl)
        if: ${{ steps.setup_pages.outputs.upload_url != '' }}
        run: |
          echo "RAW_UPLOAD_URL='${{ steps.setup_pages.outputs.upload_url }}'"
          url='${{ steps.setup_pages.outputs.upload_url }}'
          # Trim CR/LF
          url=$(printf "%s" "$url" | tr -d '\r\n')
          echo "TRIMMED_UPLOAD_URL='$url'"
          cd web
          zip -r ../pages.zip dist
          curl -v -X POST -H "Content-Type: application/zip" --data-binary @../pages.zip "$url"

      - name: Fallback upload via action (upload-pages-artifact@v2)
        if: ${{ steps.setup_pages.outputs.upload_url == '' }}
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./web/dist

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
