name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './web/package-lock.json'
      
      - name: Install dependencies
        run: |
          cd web
          npm ci
      
      - name: Build
        run: |
          cd web
          npm run build
          cp .nojekyll dist/
      
      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact (zip + curl)
        run: |
          echo "RAW_UPLOAD_URL='${{ steps.setup_pages.outputs.upload_url }}'"
          url='${{ steps.setup_pages.outputs.upload_url }}'
          # Trim CR/LF
          url=$(printf "%s" "$url" | tr -d '\r\n')
          echo "TRIMMED_UPLOAD_URL='$url'"
          if [ -z "$url" ]; then
            echo "ERROR: upload_url is empty. configure-pages may have failed or returned no upload_url." >&2
            exit 2
          fi
          if ! echo "$url" | grep -E '^https?://'; then
            echo "ERROR: upload_url does not look like a valid URL: $url" >&2
            exit 3
          fi
          cd web
          zip -r ../pages.zip dist
          curl -v -X POST -H "Content-Type: application/zip" --data-binary @../pages.zip "$url"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
